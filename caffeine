#!/usr/bin/python
from gi.repository import Gio, GLib, Gtk, AppIndicator3 as AppIndicator

idle_delay = 0

def clear_idle_delay():
  global idle_delay
  gsettings = Gio.Settings.new("org.gnome.desktop.session")
  idle_delay = gsettings.get_value("idle-delay").get_uint32()
  gsettings.set_value("idle-delay", GLib.Variant.new_uint32(0))

def restore_idle_delay():
  global idle_delay
  gsettings = Gio.Settings.new("org.gnome.desktop.session")
  if idle_delay and not gsettings.get_value("idle-delay").get_uint32():
    gsettings.set_value("idle-delay", GLib.Variant.new_uint32(idle_delay))

def set_idle_dim(idle_dim):
  gsettings = Gio.Settings.new("org.gnome.settings-daemon.plugins.power")
  gsettings.set_value("idle-dim", GLib.Variant.new_boolean(idle_dim))

def toggle(item, indicator):
  if item.get_active():
    indicator.set_status(AppIndicator.IndicatorStatus.ATTENTION)
    clear_idle_delay()
    set_idle_dim(False)
  else:
    indicator.set_status(AppIndicator.IndicatorStatus.ACTIVE)
    restore_idle_delay()
    set_idle_dim(True)

def quit(item):
  restore_idle_delay()
  set_idle_dim(True)
  Gtk.main_quit()

def setup_menu(indicator):
  def add_item(item):
    item.show()
    menu.append(item)
    return item
  menu = Gtk.Menu()
  add_item(Gtk.CheckMenuItem("Enable")).connect("toggled", toggle, indicator)
  add_item(Gtk.SeparatorMenuItem())
  add_item(Gtk.MenuItem("Exit")).connect("activate", quit)
  return menu

def setup_indicator():
  indicator = AppIndicator.Indicator.new(
    "Caffeine",
    "/usr/share/caffeine/cupempty.png",
    AppIndicator.IndicatorCategory.APPLICATION_STATUS
  )
  indicator.set_status(AppIndicator.IndicatorStatus.ACTIVE)
  indicator.set_attention_icon("/usr/share/caffeine/cupfull.png")
  indicator.set_menu(setup_menu(indicator))
  return indicator

if __name__ == "__main__":
  setup_indicator()
  Gtk.main()
